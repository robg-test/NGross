@page
@model ChartWatcher
@{
    ViewData["Title"] = "Thread";
}

<h1>@ViewData["Title"]</h1>

<form class="ThreadCharterForm">
    <label>Users</label><input/>
    <label>Hold</label><input/>
    <button>Add</button>
    <button>Reset</button>

    <div id="dvChart"></div>
    <div id="dvLegend"></div>

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/excanvas/r3/excanvas.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/chart.js/0.2/Chart.js" type="text/javascript"></script>
    <script type="text/javascript">
            $(function () {
                LoadChart();
                $("#ddlCountries").bind("change", function () {
                    LoadChart();
                });
                $("#rblChartType input").bind("click", function () {
                    LoadChart();
                });
            });
            function LoadChart() {
                var chartType = parseInt($("#rblChartType input:checked").val());
                $.ajax({
                    type: "POST",
                    url: "/Home/AjaxMethod",
                    data: { "country": $("#ddlCountries").val() },
                    success: function (response) {
                        $("#dvChart").html("");
                        $("#dvLegend").html("");
                        var data = eval(response);
                        var el = document.createElement('canvas');
                        $("#dvChart")[0].appendChild(el);
     
                        //Fix for IE 8
                        if ($.browser.msie && $.browser.version == "8.0") {
                            G_vmlCanvasManager.initElement(el);
                        }
                        var ctx = el.getContext('2d');
                        var userStrengthsChart;
                        switch (chartType) {
                            case 1:
                                userStrengthsChart = new Chart(ctx).Pie(data);
                                break;
                            case 2:
                                userStrengthsChart = new Chart(ctx).Doughnut(data);
                                break;
                        }
                        for (var i = 0; i < data.length; i++) {
                            var div = $("<div />");
                            div.css("margin-bottom", "10px");
                            div.html("<span style = 'display:inline-block;height:10px;width:10px;background-color:" + data[i].color + "'></span> " + data[i].text);
                            $("#dvLegend").append(div);
                        }
                    },
                    failure: function (response) {
                        alert('There was an error.');
                    }
                });
           }
        </script>
</form>